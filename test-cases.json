[
    {
	"test_case": "int; various",
        "input": "2 + 3 * 4",
        "expectedOutput": "Int 14"
    },
    {
	"test_case": "int; brackets",
        "input": "(10 - 5) * 3",
        "expectedOutput": "Int 15"
    },
    {
	"test_case": "int; div",
        "input": "8 / 2 + 3",
        "expectedOutput": "Int 7"
    },
    {
	"test_case": "int pow, add",
        "input": "2 ^ 3 + 1",
        "expectedOutput": "Int 9"
    },
    {
	"test_case": "int; mod, mul",
        "input": "10 % 3 * 2",
        "expectedOutput": "Int 2"
    },
    {
	"test_case": "int; unary minus",
        "input": "-11",
        "expectedOutput": "Int -11"
    },
    {
	"test_case": "int; modulo of a negative integer",
        "input": "-11 % 3",
        "expectedOutput": "Int 1"
    },
    {
	"test_case": "int; various",
        "input": "2 + 2 * 2 ^ 3",
        "expectedOutput": "Int 18"
    },
    {
	"test_case": "int; brackets",
        "input": "(5 + 3) * (2 + 1)",
        "expectedOutput": "Int 24"
    },
    {
	"test_case": "int; div, brackets",
        "input": "100 / (2 + 3)",
        "expectedOutput": "Int 20"
    },
    {
	"test_case": "int; pow, brackets",
        "input": "2 ^ (3 + 1)",
        "expectedOutput": "Int 16"
    },
    {
	"test_case": "int; mod, various",
        "input": "15 % 4 + 7 * 2 - 3",
        "expectedOutput": "Int 14"
    },
    {
	"test_case": "int; various",
        "input": "3 * (4 + 2) ^ 2 - 5",
        "expectedOutput": "Int 103"
    },
    {
	"test_case": "int; various",
        "input": "10 - 2 * 3 + 4 / 2",
        "expectedOutput": "Int 6"
    },
    {
	"test_case": "int; powers, brackets",
        "input": "2 ^ (2 ^ 3)",
        "expectedOutput": "Int 256"
    },
    {
	"test_case": "int; powers of powers",
        "input": "2 ^ 2 ^ 3",
        "expectedOutput": "Int 64"
    },
    {
	"test_case": "int; extended expressions within brackets",
        "input": "(8 + 2 * 5) / (2 + 3)",
        "expectedOutput": "Int 3"
    },
    {
	"test_case": "int; various",
        "input": "7 * (3 + 2) % 3",
        "expectedOutput": "Int 2"
    },
    {
	"test_case": "int; various",
        "input": "2 ^ (4 - 1) * 3",
        "expectedOutput": "Int 24"
    },
    {
	"test_case": "int; various",
        "input": "10 / (5 - 3) + 2 ^ 3",
        "expectedOutput": "Int 13"
    },
    {
	"test_case": "int; various",
        "input": "((4 + 2) * 3 - 6) / 2",
        "expectedOutput": "Int 6"
    },
    {
	"test_case": "int; various",
        "input": "17 % (5 + 3) * 2 - 1",
        "expectedOutput": "Int 1"
    },
    {
	"test_case": "int; various",
        "input": "2 + 3 * 4 ^ 2 / 8 - 1",
        "expectedOutput": "Int 7"
    },
    {
	"test_case": "float; add",
        "input": "3.14 + 2.86",
        "expectedOutput": "Float 6.0"
    },
    {
	"test_case": "float add int",
        "input": "3.14 + 2",
        "expectedOutput": "Float 5.14"
    },
    {
	"test_case": "float mul float",
        "input": "5.5 * 2.5",
        "expectedOutput": "Float 13.75"
    },
    {
	"test_case": "float mul int",
        "input": "5.5 * 2",
        "expectedOutput": "Float 11.0"
    },
    {
	"test_case": "int div int",
        "input": "11 / 2",
        "expectedOutput": "Int 5"
    },
    {
	"test_case": "float intdiv float",
        "input": "10.5 / 2.1",
        "expectedOutput": "Float 5.0"
    },
    {
	"test_case": "float mul int",
        "input": "2.5 ^ 2",
        "expectedOutput": "Float 6.25"
    },
    {
	"test_case": "float mod float",
        "input": "7.51 % 2.2",
        "expectedOutput": "Float 0.91"
    },
    {
	"test_case": "float; various",
        "input": "(1.5 + 2.5) * (3.5 - 1.5)",
        "expectedOutput": "Float 8.0"
    },
    {
	"test_case": "float, int; various",
        "input": "3.14 * (2 + 4.5) - 1.5",
        "expectedOutput": "Float 18.91"
    },
    {
	"test_case": "float; various",
        "input": "2.5 ^ (1.5 + 0.5)",
        "expectedOutput": "Float 6.25"
    },
    {
	"test_case": "float; various",
        "input": "9.8 / (2.1 + 0.9)",
        "expectedOutput": "Float 3.267"
    },
    {
	"test_case": "float; various",
        "input": "1.5 * 2.5 + 3.5 / 0.5 - 2.5",
        "expectedOutput": "Float 8.25"
    },
    {
	"test_case": "float mul int",
        "input": "3.4 * 2",
        "expectedOutput": "Float 6.8"
    },
    {
	"test_case": "float div int",
        "input": "10.5 / 2",
        "expectedOutput": "Float 5.25"
    }
]
